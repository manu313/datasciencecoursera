outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome = outcome, num = num))
cbind(outcome10, outcome11)
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 4), 10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if ((state %in% outcomex$State)==FALSE)  return("invalid state")
else
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome = outcome, num = num))
cbind(outcome10, outcome11)
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 4), 10)
outcome10
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
cbind(outcome10, outcome11)
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 4), 10)
head(rankall("heart attack", 20), 10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
cbind(hospital=outcome10, state=outcome11)
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome10 <- order(outcome10)
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
cbind(hospital=outcome10, state=outcome11)
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
cbind(hospital=outcome10, state=outcome11)
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
final1 <- cbind(hospital=outcome10, state=outcome11)
final1 <- final1[order(final1$hospital),]
final1
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
final1 <- cbind(hospital=outcome10, state=outcome11)
final1 <- final1[order(final1$state),]
final1
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
final1 <- cbind(hospital=outcome10, state=outcome11)
final1
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
final1 <- cbind(state=outcome10, hospital=outcome11)
final1
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
final1 <- cbind(state=outcome10, hospital=outcome11)
final1 <- final1[order(final1$state),]
final1
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
final1 <- data.frame(state=outcome10, hospital=outcome11)
final1 <- final1[order(final1$state),]
final1
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, "heart failure", 4))
outcome12 <- dataframe(outcome10, outcome11)
outcome12
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, "heart attack", 20))
outcome12 <- dataframe(outcome10, outcome11)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, "heart attack", 20))
outcome12 <- data.frame(outcome10, outcome11)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
final1 <- cbind(state=outcome10, hospital=outcome11)
final1 <- final1[order(final1$state),]
final1
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
final1 <- cbind(state=outcome10, hospital=outcome11)
## Return a data frame with the hospital names and the (abbreviated) state name
}
final1
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
cbind(state=outcome10, hospital=outcome11)
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
final1 <- cbind(state=outcome10, hospital=outcome11)
final1
## Return a data frame with the hospital names and the (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
class(final1)
r56 <- head(rankall("heart attack", 20), 10)
class(r56)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
class(outcome10)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
class(outcome10)
summary(outcome10)
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, "heart attack", 20))
outcome12 <- data.frame(outcome10, outcome11)
x <-c(1,2,3)
x
outcome10
x <-c(1,2,3,11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111,9)
x
outcome10 <- unique(outcomex[,7])
outcome10 <- order(outcome10)
outcome10
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
outcome10
outcome10 <- order(outcome10)
outcome10
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, "heart attack", 20))
outcome13 <- cbind(outcome10, outcome11)
outcome13
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
outcome10 <- as.list(outcome10)
outcome10
outcome11 <- as.list(outcome11)
outcome13 <- cbind(outcome10, outcome11)
outcome13
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
outcome10 <- as.list(outcome10)
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, "heart attack", 20))
outcome11 <- as.list(outcome11)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
outcome10 <- as.list(outcome10)
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, "heart attack", 20))
outcome11 <- as.list(outcome11)
outcome13 <- cbind(state = outcome10, hospital = outcome11)
outcome13 <- outcome13[order(outcome13$hospital),]
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
outcome10 <- as.vector(outcome10)
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, "heart attack", 20))
outcome11 <- as.vector(outcome11)
outcome10
outcome13 <- cbind(state = outcome10, hospital = outcome11)
outcome13 <- cbind(state = outcome10, hospital = outcome11)
outcome13 <- outcome13[order(outcome13$state),]
outcome13 <- cbind(state = outcome10, hospital = outcome11)
outcome13
outcome13$state
outcome13 <- cbind(state1 = outcome10, hospital = outcome11)
outcome13 <- outcome13[order(outcome13$state1),]
outcome13 <- cbind(state = outcome10, hospital = outcome11)
outcome14 <- as.data.frame(outcome13)
outcome14
outcome14 <- outcome14[order(outcome14$state),]
outcome13 <- cbind(state = outcome10, hospital = outcome11)
outcome14 <- as.data.table(outcome13)
outcome14 <- as.data.frame(outcome13)
outcome14
outcome14 <- outcome14[order(outcome14$state),]
outcome13 <- cbind(state = outcome10, hospital = outcome11)
outcome14 <- as.data.frame(lapply(outcome13, unlist))
outcome14 <- as.data.frame(outcome13)
outcome14
outcome14 <- outcome14[order(outcome14[,1]),]
outcome14 <- as.data.frame(outcome13)
outcome14 <- as.character(outcome14$state)
outcome14 <- outcome14[order(outcome14[,1]),]
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
outcome10 <- as.vector(outcome10)
class(outcome10)
is.list(outcome10)
outcome13 <- cbind(state = outcome10, hospital = outcome11)
outcome13 <- outcome13[order(outcome13$state),]
outcome13 <- cbind(state = outcome10, hospital = outcome11)
outcome14 <- as.data.frame(outcome13)
outcome14
outcome14[,1]<-as.vector(outcome14[,1])
outcome14 <- outcome14[sort(outcome14[,1]),]
outcome14
outcome14 <- as.data.frame(outcome13)
outcome14 <- outcome14[sort(outcome14[,1]),]
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if ((state %in% outcomex$State)==FALSE)  return("invalid state")
else
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## Return hospital name in that state with the given rank 30-day death rate
discol <- function(x){
if (x=="heart attack") 11
else if (x=="heart failure") 17
else if (x=="pneumonia") 23
}
num1 <-function(x,y){
if (x=="best") 1
else if (x=="worst") nrow(y)
else x
}
outcome1 <- outcomex[outcomex$State==state,]
outcome1 <- outcome1[order(outcome1$Hospital.Name),]
outcome1[,discol(outcome)] <- as.numeric(outcome1[, discol(outcome)])
outcome1 <- outcome1[!is.na(outcome1[,discol(outcome)]),]
outcome3 <- transform(outcome1,
hosp.rank = ave(outcome1[,discol(outcome)],
FUN=function(x) rank(x, ties.method = "first")))
outcome3$Hospital.Name[outcome3$hosp.rank==num1(num,outcome3)]
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
head(rankall("heart attack", 20), 10)
r56
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, "heart attack", 20))
outcome12 <- cbind(state = outcome10, hospital = outcome11)
outcome13 <- noquote(outcome12)
outcome13
outcome13 <- outcome13[order(outcome13$state),]
outcome13 <- outcome13[order(,outcome13$state)]
outcome13 <- outcome13[,order(outcome13$state)]
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
## You may get a warning about NAs being introduced; that is okay
hist(outcome[, 11])
best <- function(state, outcome) {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if ((state %in% outcomex$State)==FALSE)  return("invalid state")
else
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## Return hospital name in that state with lowest 30-day rate
discol <- function(x){
if (x=="heart attack") 11
else if (x=="heart failure") 17
else if (x=="pneumonia") 23
}
outcome1 <- outcomex[outcomex$State==state,]
outcome1 <- outcome1[order(outcome1$Hospital.Name),]
outcome1[,discol(outcome)] <- as.numeric(outcome1[, discol(outcome)])
Mini <- min(outcome1[,discol(outcome)], na.rm = TRUE)
outcome2 <- subset(outcome1, outcome1[,discol(outcome)]==Mini)
outcome2$Hospital.Name
}
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if ((state %in% outcomex$State)==FALSE)  return("invalid state")
else
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## Return hospital name in that state with the given rank 30-day death rate
discol <- function(x){
if (x=="heart attack") 11
else if (x=="heart failure") 17
else if (x=="pneumonia") 23
}
num1 <-function(x,y){
if (x=="best") 1
else if (x=="worst") nrow(y)
else x
}
outcome1 <- outcomex[outcomex$State==state,]
outcome1 <- outcome1[order(outcome1$Hospital.Name),]
outcome1[,discol(outcome)] <- as.numeric(outcome1[, discol(outcome)])
outcome1 <- outcome1[!is.na(outcome1[,discol(outcome)]),]
outcome3 <- transform(outcome1,
hosp.rank = ave(outcome1[,discol(outcome)],
FUN=function(x) rank(x, ties.method = "first")))
outcome3$Hospital.Name[outcome3$hosp.rank==num1(num,outcome3)]
}
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
dir<- "C:/Users/i81146/Dropbox/MJU_XWR/Code/datasciencecoursera/R/week4"
setwd(dir)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomex <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") return("invalid disease")
else
## For each state, find the hospital of the given rank
outcome10 <- unique(outcomex[,7])
outcome11 <- lapply(outcome10, FUN = function(x) rankhospital(x, outcome , num))
final1 <- cbind(state=outcome10, hospital=outcome11)
final1
## Return a data frame with the hospital names and the (abbreviated) state name
}
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r
r <- rankall("pneumonia", "worst")
r
r <- rankall("heart failure", 10)
r
